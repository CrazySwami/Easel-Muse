@import "tailwindcss";
@import "tw-animate-css";
@import '@xyflow/react/dist/style.css';
@import "shadcn-prose";
@import "@liveblocks/react-tiptap/styles.css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

:root {
  --radius: 0.5rem;
  /* Slightly darker light-mode base */
  --background: oklch(0.94 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(0.99 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(0.99 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.60 0.13 163);
  --primary-foreground: oklch(1 0 0);
  /* Slightly darker canvas/secondary */
  --secondary: oklch(0.955 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.96 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.96 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  /* unchanged */
  --background: oklch(0.12 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.60 0.13 163);
  --primary-foreground: oklch(1 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    @apply border-border outline-ring/50;
  }

  html,
  body {
    overscroll-behavior-x: none;
  }

  body {
    @apply bg-background text-foreground;
  }

  /* Prevent text selection application-wide while dragging a node */
  body.react-flow-dragging {
    user-select: none;
  }
}

@layer base {
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    @apply border-border;
  }
  * {
    @apply min-w-0;
  }
  html {
    text-rendering: optimizelegibility;
  }
  body {
    @apply min-h-[100dvh];
  }
  input::placeholder,
  textarea::placeholder {
    @apply text-muted-foreground;
  }
  button:not(:disabled),
  [role="button"]:not(:disabled) {
    @apply cursor-pointer;
  }
}

@layer utilities {
  .prose-sm h1 {
    @apply text-3xl font-semibold tracking-tight;
  }
  .prose-sm h2 {
    @apply text-2xl font-semibold tracking-tight;
  }
  .prose-sm h3 {
    @apply text-xl font-semibold tracking-tight;
  }
  .prose-sm h4 {
    @apply text-lg font-semibold tracking-tight;
  }
  .prose-sm h5 {
    @apply text-base font-semibold tracking-tight;
  }
  .prose-sm h6 {
    @apply text-sm font-semibold tracking-tight;
  }
  .text-balance {
    text-wrap: balance;
  }

  .primitive-editor > div > .ProseMirror p {
    line-height: 1.3 !important;
    margin-top: 0.25rem !important;
    margin-bottom: 0.25rem !important;
  }
}

/* Simple mode for stress tests: hide heavy internals when zoomed out */
.easel-simple .react-flow__node .prose,
.easel-simple .react-flow__node pre,
.easel-simple .react-flow__node code,
.easel-simple .react-flow__node img {
  display: none !important;
}

@layer base {
  .react-flow__background {
    /* Softer off-white canvas in light mode */
    background-color: hsl(var(--secondary)) !important;
  }

  .react-flow__pane {
    user-select: none;
  }

  /* Disable accidental text selection on the canvas */
  .react-flow {
    user-select: none;
  }
  /* Allow text selection and Iâ€‘beam cursor inside editor areas */
  .react-flow .ProseMirror,
  .react-flow textarea,
  .react-flow input,
  .react-flow .cm-editor {
    user-select: text !important;
    cursor: text !important;
  }
  /* React Flow sets grab on nodes; override inside editor surface */
  .react-flow__node .ProseMirror,
  .react-flow__node .cm-editor {
    cursor: text !important;
  }

  .dark .react-flow__background {
    /* Dull charcoal canvas in dark mode */
    background-color: #1115 !important;
  }
  /* Animated hero gradient */
  .animated-gradient {
    position: absolute;
    inset: 0;
    background:
      radial-gradient(
        800px circle at 30% 40%,
        color-mix(in oklch, var(--primary) 25%, transparent),
        transparent 55%
      ),
      radial-gradient(
        600px circle at 70% 50%,
        color-mix(in oklch, var(--primary) 20%, transparent),
        transparent 55%
      );
    filter: blur(30px);
    opacity: 0.95;
    animation: gradient-move 14s ease-in-out infinite alternate;
    will-change: transform;
  }
  .dark .animated-gradient {
    opacity: 0.6;
  }
  /* Centered gradient blob for hero text */
  .hero-gradient-blob {
    position: absolute;
    left: 50%;
    top: 45%;
    transform: translate(-50%, -50%);
    width: 600px;
    height: 350px;
    background: radial-gradient(
      circle,
      color-mix(in oklch, var(--primary) 15%, transparent),
      transparent 70%
    );
    filter: blur(40px);
    opacity: 0.4;
    pointer-events: none;
  }
  .dark .hero-gradient-blob {
    opacity: 0.25;
  }
  @keyframes gradient-move {
    0% {
      transform: translate3d(-3%, -1%, 0) scale(1.02);
    }
    50% {
      transform: translate3d(2%, 1.5%, 0) scale(1.05);
    }
    100% {
      transform: translate3d(-1%, 2%, 0) scale(1.03);
    }
  }

  /* Bottom fade to background to ensure a solid base in both themes */
  .hero-bottom-fade {
    position: absolute;
    inset-inline: 0;
    bottom: 0;
    height: 40%;
    background-image: linear-gradient(to bottom, transparent 0%, var(--background) 70%, var(--background) 100%);
    pointer-events: none;
  }

  /* Content entrance */
  .fade-up-in { opacity: 0; transform: translateY(12px); animation: fade-up 600ms ease-out forwards; }
  @keyframes fade-up {
    to { opacity: 1; transform: translateY(0); }
  }

  /* Make a section bleed full width within a centered container */
  .full-bleed {
    width: 100vw;
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
  }
  .react-flow__background-pattern.dots {
    /* Darker dots in light mode */
    @apply fill-foreground/80!;
  }
  .dark .react-flow__background-pattern.dots {
    /* Much more faded dots in dark mode */
    @apply fill-foreground/12!;
  }
  .react-flow__node.selected .node-container {
    @apply ring-2! ring-[var(--cursor-color,var(--primary))]!;
  }
  .react-flow__controls-button {
    @apply inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50 rounded-full;
    @apply border-none! size-9! bg-transparent! hover:bg-accent/50! dark:hover:bg-accent/50!;
  }
  .react-flow__controls-button > svg {
    @apply size-4;
  }
  /* Use default pointer over node toolbars (no grab hand) */
  .react-flow__node-toolbar,
  .react-flow__node-toolbar * {
    cursor: default !important;
  }
  .react-flow__handle {
    /* Soft-square, glassy handle */
    width: 32px !important;
    height: 32px !important;
    border-radius: 14px !important;
    border: 1.5px solid color-mix(in oklch, var(--primary) 55%, white) !important;
    background: color-mix(in oklch, var(--primary) 14%, transparent) !important;
    box-shadow:
      0 1px 1px rgba(0,0,0,0.06),
      0 6px 18px color-mix(in oklch, var(--primary) 20%, transparent);
    backdrop-filter: blur(2px);
    z-index: 60;
    pointer-events: auto;
    transition: box-shadow .18s ease, transform .18s ease, background-color .18s ease;
    position: relative;
  }
  .dark .react-flow__handle {
    border-color: color-mix(in oklch, var(--primary) 65%, black) !important;
    background: color-mix(in oklch, var(--primary) 18%, transparent) !important;
    box-shadow:
      0 1px 0 rgba(0,0,0,0.25),
      0 8px 20px color-mix(in oklch, var(--primary) 22%, transparent);
  }
  /* Inner dot indicator */
  .react-flow__handle::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    width: 7px;
    height: 7px;
    transform: translate(-50%, -50%);
    border-radius: 9999px;
    background: color-mix(in oklch, var(--foreground) 85%, black);
    opacity: .9;
  }
  .dark .react-flow__handle::before { background: oklch(0.93 0 0); }
  .react-flow__handle:hover { transform: scale(1.06); box-shadow: 0 0 0 6px color-mix(in oklch, var(--primary) 18%, transparent); }
  .react-flow__handle-connecting, .react-flow__handle-valid {
    box-shadow: 0 0 0 8px color-mix(in oklch, var(--primary) 28%, transparent), 0 10px 24px color-mix(in oklch, var(--primary) 30%, transparent) !important;
    background: color-mix(in oklch, var(--primary) 24%, transparent) !important;
    animation: handle-pulse 1.2s ease-out infinite;
  }
  .react-flow__handle:hover {
    /* Slight emphasis on hover */
    box-shadow: 0 0 0 3px hsl(var(--primary) / 0.18);
  }  
  .react-flow__handle-left { left: -10px !important; }
  .react-flow__handle-right { right: -10px !important; }

  @keyframes handle-pulse {
    0%   { transform: scale(1.0); }
    60%  { transform: scale(1.08); }
    100% { transform: scale(1.0); }
  }
}

.changelog-gif {
  border-radius: 8px;
}

.dark .changelog-gif {
  border: 1px solid oklch(1 0 0 / 20%);
}

/* TipTap Editor Styles */
.ProseMirror {
  height: 100%;
  width: 100%;
}

/* Restore default list styling inside Tiptap (Tailwind resets list-style) */
.ProseMirror ul {
  list-style-type: disc;
  padding-left: 1.25rem; /* ~20px */
  margin-left: 0.5rem;
}
.ProseMirror ol {
  list-style-type: decimal;
  padding-left: 1.25rem;
  margin-left: 0.5rem;
}
.ProseMirror li {
  margin: 0.25rem 0;
}

/* Better blockquote appearance */
.ProseMirror blockquote {
  border-left: 2px solid var(--color-border);
  padding-left: 0.75rem;
  color: var(--color-muted-foreground);
}

/* Respect inline styles for text alignment from TextAlign extension */
.ProseMirror [style*="text-align:"] {
  display: block;
}

/* Compact Liveblocks TipTap toolbar normalization */
.lb-toolbar-compact {
  gap: 0.375rem; /* 1.5 */
  font-size: 13px;
}
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.Group'] {
  display: inline-flex;
  align-items: center;
  gap: 0.375rem;
}
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.Label'] {
  display: inline-flex;
  align-items: center;
  height: 1.75rem; /* align to buttons */
  white-space: nowrap;
}
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.SelectTrigger'] span,
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.SelectTrigger'] svg {
  line-height: 1;
}
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.Separator'] {
  margin-inline: 0.25rem;
}
/* Add left padding so first control isn't flush against rounded corner */
.lb-toolbar-compact {
  padding-left: 0.75rem;
}
/* Normalize every toolbar primitive */
.lb-toolbar-compact [data-liveblocks-ui^='Toolbar.'] {
  display: inline-flex;
  align-items: center;
  line-height: 1;
}
/* Prefer icon-only buttons to avoid cramped labels */
.lb-toolbar-compact [data-liveblocks-ui='Toolbar.Button'] span {
  display: none;
}

/* Hide native cursor over canvas when presence is active */
.canvas-hide-native-cursor {
  cursor: none !important;
}

/* Liveblocks comments UI fixes */
/* Liveblocks thread popovers */
.lb-threads [data-liveblocks-ui*='Thread'] {
  --lb-surface: var(--color-card);
  --lb-border: var(--color-border);
}
.lb-threads [data-liveblocks-ui='Thread.Root'],
.lb-threads [data-liveblocks-ui='Thread.Card'],
.lb-threads [role='dialog'] {
  background: var(--color-card);
  border: 1px solid var(--color-border);
  border-radius: 0.75rem;
  box-shadow: 0 6px 24px rgba(0,0,0,.15);
}
.dark .lb-threads [data-liveblocks-ui='Thread.Root'],
.dark .lb-threads [data-liveblocks-ui='Thread.Card'],
.dark .lb-threads [role='dialog'] {
  background: color-mix(in oklch, var(--background) 88%, white 12%);
}
.lb-threads [data-liveblocks-ui='Thread.Header'] { align-items: center; }
.lb-threads [data-liveblocks-ui='Comment.Content'] { white-space: pre-wrap; }
.lb-composer,
.lb-composer > * {
  background: var(--color-card) !important;
  border: 1px solid var(--color-border) !important;
  border-radius: 0.75rem !important;
}

/* Fallback: style Liveblocks composer/threads even when rendered in a portal */
[data-liveblocks-ui^='Composer'] {
  background: var(--color-card) !important;
  border: 1px solid var(--color-border) !important;
  border-radius: 0.75rem !important;
  box-shadow: 0 6px 24px rgba(0,0,0,.12);
}
[data-liveblocks-ui='Composer.Root'] { overflow: hidden; }
[data-liveblocks-ui='Composer.Textarea'] {
  background: transparent !important;
  color: var(--color-foreground) !important;
}
[data-liveblocks-ui='Composer.Toolbar'] {
  border-top: 1px solid var(--color-border) !important;
}
[data-liveblocks-ui='FloatingComposer.Root'] {
  background: var(--color-card) !important;
  border: 1px solid var(--color-border) !important;
  border-radius: 0.75rem !important;
  box-shadow: 0 6px 24px rgba(0,0,0,.12);
}
[data-liveblocks-ui^='Thread'] {
  background: var(--color-card) !important;
  border: 1px solid var(--color-border) !important;
  border-radius: 0.75rem !important;
}
[data-liveblocks-ui='Thread.Root'] { overflow: hidden; }
[data-liveblocks-ui='Thread.Header'] { align-items: center; }
[data-liveblocks-ui^='Comment'] { background: transparent !important; }
[data-liveblocks-ui='Comment.Content'] { white-space: pre-wrap; }

.ProseMirror:focus {
  outline: none;
}

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--color-muted-foreground);
  pointer-events: none;
  height: 0;
}

nextjs-portal {
  @apply hidden;
}